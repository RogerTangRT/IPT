//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgenteMonitorRecurso.ServiceReference_SolicitacaoAjuda {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference_SolicitacaoAjuda.IService_SolicitacaoAjuda")]
    public interface IService_SolicitacaoAjuda {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaHospedeiro", ReplyAction="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaHospedeiroResponse")]
        string ReiniciaHospedeiro(string sNomeComputador, string sNomeServico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaHospedeiro", ReplyAction="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaHospedeiroResponse")]
        System.Threading.Tasks.Task<string> ReiniciaHospedeiroAsync(string sNomeComputador, string sNomeServico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaContadores", ReplyAction="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaContadoresResponse")]
        void ReiniciaContadores();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaContadores", ReplyAction="http://tempuri.org/IService_SolicitacaoAjuda/ReiniciaContadoresResponse")]
        System.Threading.Tasks.Task ReiniciaContadoresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_SolicitacaoAjuda/ServicoReativado", ReplyAction="http://tempuri.org/IService_SolicitacaoAjuda/ServicoReativadoResponse")]
        void ServicoReativado(string sNomeComputador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_SolicitacaoAjuda/ServicoReativado", ReplyAction="http://tempuri.org/IService_SolicitacaoAjuda/ServicoReativadoResponse")]
        System.Threading.Tasks.Task ServicoReativadoAsync(string sNomeComputador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService_SolicitacaoAjudaChannel : AgenteMonitorRecurso.ServiceReference_SolicitacaoAjuda.IService_SolicitacaoAjuda, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service_SolicitacaoAjudaClient : System.ServiceModel.ClientBase<AgenteMonitorRecurso.ServiceReference_SolicitacaoAjuda.IService_SolicitacaoAjuda>, AgenteMonitorRecurso.ServiceReference_SolicitacaoAjuda.IService_SolicitacaoAjuda {
        
        public Service_SolicitacaoAjudaClient() {
        }
        
        public Service_SolicitacaoAjudaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service_SolicitacaoAjudaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_SolicitacaoAjudaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_SolicitacaoAjudaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ReiniciaHospedeiro(string sNomeComputador, string sNomeServico) {
            return base.Channel.ReiniciaHospedeiro(sNomeComputador, sNomeServico);
        }
        
        public System.Threading.Tasks.Task<string> ReiniciaHospedeiroAsync(string sNomeComputador, string sNomeServico) {
            return base.Channel.ReiniciaHospedeiroAsync(sNomeComputador, sNomeServico);
        }
        
        public void ReiniciaContadores() {
            base.Channel.ReiniciaContadores();
        }
        
        public System.Threading.Tasks.Task ReiniciaContadoresAsync() {
            return base.Channel.ReiniciaContadoresAsync();
        }
        
        public void ServicoReativado(string sNomeComputador) {
            base.Channel.ServicoReativado(sNomeComputador);
        }
        
        public System.Threading.Tasks.Task ServicoReativadoAsync(string sNomeComputador) {
            return base.Channel.ServicoReativadoAsync(sNomeComputador);
        }
    }
}
